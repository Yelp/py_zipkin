[tox]
envlist = pre-commit, py35, py36, py37, py38, pypy, black, flake8

[testenv]
deps = -rrequirements-dev.txt
extras = protobuf
commands =
    coverage erase
    # Check that we have 100% unit test coverage, without counting integration tests
    coverage run --source=py_zipkin/ -m pytest --ignore=tests/integration -vv {posargs:tests}
    coverage report -m --show-missing --fail-under 100
    # Now run integration tests
    py.test -vv tests/integration

[testenv:pypy]
# Don't use wheel for thriftpy2. When creating the pypy virtualenv pip generates a generic
# py2-py3 wheel that gets put in the cache and from then on reused also for CPython. That causes
# thriftpy2 imports to fail with `ModuleNotFoundError: No module named 'thriftpy2.protocol.cybin'`
# since those expect those modules to have been compiled to `.so`.
basepython = python3.7
install_command = python -m pip install --no-binary thriftpy2 {opts} {packages}

[testenv:pre-commit]
basepython = python3.7
deps = pre-commit
commands =
    pre-commit install -f --install-hooks
    pre-commit run --all-files {posargs}

[testenv:flake8]
basepython = python3.7
deps = flake8
commands =
    flake8 py_zipkin tests

[flake8]
exclude = .git,__pycache__,.tox,docs,py_zipkin/encoding/protobuf/zipkin_pb2.py
max_line_length = 88

[testenv:black]
basepython = python3.7
deps = black
commands =
    black . --target-version py35 --extend-exclude setup.py

[coverage:report]
omit = py_zipkin/encoding/protobuf/zipkin_pb2.py
